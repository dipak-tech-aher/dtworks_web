import React, { useState } from 'react';
import DynamicTable from '../../../../common/table/DynamicTable';
import { GenerateInvoiceColumnList } from './GenerateInvoiceColumnList';
import moment from 'moment';
import { USNumberFormat } from '../../../../common/util/util';

const GenerateInvoice = (props) => {

    const { generateInvoiceCounts, generateList = [], billingReadOnly, billCycle } = props.data;
    const { handleOnGenerateInvoice } = props.handler;
    const [exportBtn, setExportBtn] = useState(false);

    const handleCellRender = (cell, row) => {
        if (['Invoice Period'].includes(cell.column.Header)) {
            return (
                <span>
                    {
                        cell.value && !!row?.original?.invoiceEndDate ?
                            <>
                                {moment(cell.value).format('DD MMM YYYY')} - {moment(row?.original?.invoiceEndDate).format('DD MMM YYYY')}
                            </>
                            : ''
                    }
                </span>
            )
        }
        else if (['Process Date'].includes(cell.column.Header)) {
            return (<span>{cell.value ? `${moment(cell.value).format('DD MMM YYYY hh:mm:ss A')}` : ''}</span>)
        }
        else if (['Total Processed', 'Success', 'Failed'].includes(cell.column.Header)) {
            return (<span>{cell.value ? cell.value : 0}</span>)
        }
        else if (['Generated By'].includes(cell.column.Header)) {
            return (<span>{row?.original?.createdByName?.firstName + " " + row?.original?.createdByName?.lastName}</span>)
        }
        else {
            return (<span>{cell.value}</span>)
        }
    }

    return (
        <div className="row">
            <div className="col-12 pr-0">
                <div className="col-12 row p-2">
                    <div className="col-lg-3 col-md-4 col-sm-6">
                        <div className="form-group">
                            <label htmlFor="invoiceCount" className="col-form-label">Potential Invoices count</label>
                            <p>{generateInvoiceCounts?.potentialInvoiceCount}</p>
                        </div>
                    </div>
                    <div className="col-lg-3 col-md-4 col-sm-6">
                        <div className="form-group">
                            <label htmlFor="revenue" className="col-form-label">Potential Revenue </label>
                            <p>{USNumberFormat(generateInvoiceCounts?.potentialRevenue)}</p>
                        </div>
                    </div>
                    <div className="col-lg-3 col-md-4 col-sm-6">
                        <div className="form-group">
                            <label htmlFor="rc" className="col-form-label">Potential RC</label>
                            <p>{USNumberFormat(generateInvoiceCounts?.potentialRc)}</p>
                        </div>
                    </div>
                    <div className="col-lg-3 col-md-4 col-sm-6">
                        <div className="form-group">
                            <label htmlFor="nrc" className="col-form-label">Potential NRC</label>
                            <p>{USNumberFormat(generateInvoiceCounts?.potentialNrc)}</p>
                        </div>
                    </div>
                    <div className="col-lg-3 col-md-4 col-sm-6">
                        <div className="form-group">
                            <label htmlFor="usageValue" className="col-form-label">Potential Usage Value</label>
                            <p>{USNumberFormat(generateInvoiceCounts?.potentialUsageValue)}</p>
                        </div>
                    </div>
                    {/* <div className="col-3">
                        <div className="form-group">
                            <label htmlFor="cycleNo" className="col-form-label">Invoice Cycle Number </label>
                            <p>{generateInvoiceCounts?.invoiceCycleNo}</p>
                        </div>
                    </div>
                    <div className="col-3">
                        <div className="form-group">
                            <label htmlFor="invoiceRegenerate" className="col-form-label">No of Times Invoice Regenerate </label>
                            <p>{generateInvoiceCounts?.invoiceRegenCnt}</p>
                        </div>
                    </div>*/}
                    <div className={`pt-3 skel-btn-center-cmmn w-100 ${billingReadOnly ? 'd-none' : ''}`}>
                        <button type="button" className=" skel-btn-submit" onClick={handleOnGenerateInvoice}>
                            Generate Invoice
                        </button>
                    </div>
                </div>
                {
                    !!generateList.length &&
                    <section>
                        <DynamicTable
                            listKey={"Contract List"}
                            row={generateList}
                            header={GenerateInvoiceColumnList}
                            itemsPerPage={10}
                            exportBtn={exportBtn}
                            handler={{
                                handleCellRender: handleCellRender,
                                handleExportButton: setExportBtn
                            }}
                        />
                    </section>
                }
            </div>
        </div>
    )
}

export default GenerateInvoice;